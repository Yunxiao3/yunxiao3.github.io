<?xml version="1.0" encoding="utf-8"?>
<search>
  
    <entry>
      <title><![CDATA[《时间的朋友:22岁生日感言》]]></title>
      <url>/2020/02/11/%E6%97%B6%E9%97%B4%E7%9A%84%E6%9C%8B%E5%8F%8B22/</url>
      <content type="text"><![CDATA[​    如果不是Y提醒我别忘记更新今年的推送，我可能已经悄悄的把这件事给忘了。因为还没开始写这篇推送的时候，我就已经意识到去年吹的牛实在有点太大了。一来自己已经到了需要翻看照片才能唤醒稍许回忆的年纪，二来随着年龄的增长，自己其实不应该再拘泥自己的情绪与故事了，更何况是将他们讲述出去。但考虑到去年说的话已经收不回来了，而自己离10W+可能也只差临门一脚。所以还是决定抽出些时间来记录一下过去一年的所思所想，并借此机会把去年的愿望稍稍修改一下，改成“少吹牛，多做事”。接下是我的22岁生日感言，也是这十篇中的倒数第八篇。​    ​    如果说20岁只有一半的时间在泥土中挣扎的话，那么整个21岁基本上都可以算是在泥巴中爬了。特别是上半年的那种痛苦感觉甚至让我的大脑产生了应激反应，使我遗失了大半年的记忆。现在唯一还有点印象的就是：三四月份为了赶deadline，半夜做不出实验抬头发现周围早已空无一人的无助；以及5月20号在西安候机时，别人拿着玫瑰而自己却手捧实验报告的场景。虽然后来论文改成了poster，实验分数也不高，但我却离和Z吹牛时立下的小目标越来越近：大学毕业的时能说上一句“自己很幸运大学期间没谈恋爱”。现在看来其实只要一个人运气足够的好，随便立一个小目标都是可以实现一半的（比如没谈恋爱）。    而从西安回来以后不久，很多学校的夏令营就已经开始发offer了。当周围大佬将自己的offer排满一个月准备开始全国各地旅游的时，我却只能躲在角落里瑟瑟发抖（菜鸡的必然命运），并且陷入了很长一段时间的迷失与焦虑。其实现在想想参加夏令营还是挺有意思的。特别是在成都的那段闲适的时光让我至今回味。夏令营结束以后，我便按照计划一个人横渡了赣江。虽然对我来说这确实是充满风险的，但在我看来这些风险更多是源于自己对未知的恐惧。​    如果说在赣江里游泳让自己的生命承担一些风险的话，那么八月底放弃G老师留给我的名额（在此感谢所有老师），则是让自己的未来承担了一点风险（还是对未知的恐惧)。即使现在看来当时去南开也是一个非常好的选择，但自己却在没有六级成绩（意味着很多学校的报名要求都达不到）和没有更好选择的情况下放弃了这个机会。虽然后面的结果甚至比我预计的要好，但站在当时来看放弃这个机会，除了将自己再一次推向未知的风浪当中并没有什么好处（唯一好处就是可以报名参加浙软的面试，而当时招生群里有近1000人）。当然后面因为种种运气的加持，使得自己在杭州的时候已经处于一种旅游状态了。所以面试结束后便一个人去灵隐寺转了转，或许秋风和古寺往往能引起人新的思绪。在那些斑驳的石像面前，我突然觉得，虽然英雄可以逐鹿中原快意江湖，但作为和我一样的普通人每年能够踏实的感叹一声：又是一年秋风起，亦何尝不是一种乐趣。也是从那个时候起，自己开始慢慢理解：“人生最大的幸福是求仁得仁，平淡生活也好激烈拼搏也好，所有得到了自己想要生活的人都值得被祝福“这句话的含义。其实在动笔之前自己一直在想：究竟是什么东西让我能用这种相对平稳的心态来写今年《时间的朋友》，动笔以后却发现答案无非“幸运”二字。如果抛开运气的成分，自己在过去的一年做的其实是很糟糕的。虽然之前一直都觉得年轻时多犯些错并不是一件坏事，但我也意识到自己犯错的成本在不断变大了。所以在即将到来的22岁，希望自己能够真正做到“少吹牛，多做事”。​    最后按照惯例附上一张自己22岁的生日照片（感觉美颜不是很成功，哈哈），并祝愿各位亲朋师友平安喜乐。]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> 时间的朋友 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[《时间的朋友:21岁生日感言》]]></title>
      <url>/2020/02/11/%E6%97%B6%E9%97%B4%E7%9A%84%E6%9C%8B%E5%8F%8B21/</url>
      <content type="text"><![CDATA[​      今年过年翻看去年的推文感觉还挺有意思的，于是想到罗胖发的那个宏愿：办20场《时间的朋友》跨年演讲，我自然是没有他那么胖，但今天也发下了一个宏愿：从20岁到30岁写下十篇《时间的朋友》生日感言：一来可以借此机会让大家批评我幼稚的想法，成熟我的思想。二来可以作为自己的年终大考，敦促我前进，三来还可以见证自己成长的过程。思前想后真是感觉百利而无一害，于是便决定每年元宵节推送一篇《时间的朋友》生日感言，和大家分享与进步，同时也让关注我的粉丝每年好有个期待（哈哈）。接下的是我的21岁生日感言，也是这十篇中的倒数第九篇。        20岁，中国人眼中的弱冠之年，我眼中的漫长的一年。在这一年发生了太多精彩的事情，留下了太多美好的回忆。回想起来感觉自己真是太过于幸运，能在过去的一年里认识许多优秀的朋友，并透过他们看到了一个更为宽广的世界，以及清楚认识到了自身的渺小与平凡，让自己在前行的道路上有了一颗更为谦卑与努力的心。其实20岁的这一年也不知到怎么就熬过来了（神奇），有些时候真觉得自己快熬不下去了。事情总是一堆一堆的过来，很多时候连口喘息的机会都没有。当然自己能成功的活到现在并且坚持下来，很大程度上得益于周围朋友们的帮助，以及师长们的包容。正是有了大家的帮助和包容，自己才能在20岁的这一年里走的没那么艰难。​        我觉得过去的这一年对我来说大致可以分为两半：一半在阳光里飞扬，一半在泥土里挣扎。在阳光里的那一半过的还算无忧无虑，一周踢两次球，每次都踢到筋疲力尽，然后洗个热水澡睡觉。没事就约老哥骑车出去玩，一出去就是七八个小时，以至于南昌一两点的街头还能回荡着我们：青春是最棒的！声音。有时回来的太晚就直接睡他实验室两个人接着聊天聊到天亮。每每看到天亮了大家都会感叹一下：年轻的感觉真的是好啊！泥土里的一半则是越来越大的压力，无论是比赛成绩还是科研，每一件都压得我喘不过气，于是我只能慢慢的开始习惯，失去周末，失去自由，把一天当成两天用生活。每天都有做不完的事情，每天都对未来感到焦虑，经常性的熬夜写实验报告，以致于期末考试那一周竟会略感轻松。偶尔想放弃的时候，就骑车到医学院转一圈，买点自己喜欢吃的东西回来狂吃一顿，然后又继续苟且的活着。​​        当然过去的一年也经历了许多有意思的事情，四月在北京的时候，北大当时在上课，Z学长让他同学领着我们进去看了慕名已久的北大小姐姐。回来的火车上，十几个爱码士则坐在一起聊天，天南地北的人，天南地北的侃，大家聊的都很开心，只是慢慢的我发现了自己是这一行人中最菜的这一事实（尴尬）。下了火车又刚好赶上球队夺冠，只是没过多久大家就含泪送走了这批学长。暑假留校的时候，没事就去游个泳，以致于编程水平不见提高，游泳技术却提高了不少，原本正计划着游一次赣江，但wls的wannfly刚好在东秦开营，于是一行人摩拳擦掌准备好了，去秦皇岛大干一场，没想到到了以后却是一顿吃喝玩乐（刻苦学习），白天听各路大神讲如何树套树套树保送清北（讲的很好），晚上则和yls踩踩海浪吹吹海风吹吹牛（晚上补题）。​        开学因没几天，便请了十多天的假和队友坐着火车开始了自己的打铁之旅（获奖有金银铜，没获则打铁），以至于现在看见火车就想吐。​    打完铁，hls达成了铁人三项成就，一举成名，和yls学英语准备出国去了，我来到了徐老师的实验室，开始了自己的科研之旅（划水），各自又打开了人生中的一扇新的大门。虽然打铁的滋味很不好受，但我还是很怀念吉林那种空气的味道，以及冷风吹在年轻的身体上的感觉（嘻嘻）。​	寒假放假回家，慢慢觉得中国社会阶级之间的鸿沟可能比自己想象的还要大的多。于是也会经常焦虑的问自己，下一轮时代的红利将出现在哪，而自己又是否有能力去抓住这次机会改变自己？ 前几天和朋友聊天发现这样着焦虑并不只我一个人有，或许相似环境中，产生的想法大多是相似的，于是我们只能自我安慰到：未来终究是属于年轻人的，只希望你我都能再多年轻一会。其实慢慢的我也越来越相信，人生就是一个可能性越变越小的过程。随着生活的可能性越变越小，人也会慢慢的会油腻起来，直到最后困守在生活的一潭死水当中。​        今年元旦，L在他的年终感言里有一句话我很喜欢：”2018年最重要的是我发现那个真实的自己，资质平平的人，来自一个普通的原生家庭，性格太过浮躁，内心虚荣，过于自大，所以今后要去想好如何过完这一生。人生立世，当有肩担，但我回顾起过往的自己，却发现有着太多的地方需要精进。”虽然这只是大佬惯用的过谦之词，但却也或多或少的道出了我内心的千丝万缕的感受。          在这篇推文的最前面是我今年听的最多的一首音乐（来自网易云数据），里面有句歌词想最后和大家分享一下（没时间写了，开始草草结尾，哈哈）：多少人成功在即，多少人前功尽弃。人间悲喜不过是太过痴迷。希望新的一年里自己能够以一颗更加谦虚平和的心态继续前行。也希望大家在新的一年里都能找到自己的梦想与爱情。最后附上一张生日照（虽然美颜美的不像话，嘻嘻），并赶在元宵节的最后一点时间，祝愿各位亲朋师友平安喜乐，并祝元宵节快乐。]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> 时间的朋友 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[《时间的朋友:20岁生日感言》]]></title>
      <url>/2020/02/11/%E6%97%B6%E9%97%B4%E7%9A%84%E6%9C%8B%E5%8F%8B20/</url>
      <content type="text"><![CDATA[​        20岁有太多太多话想说，有太多太多故事想讲，有太多太多人想感谢，有太多太多感慨,有太多太多幸运。20年，周围的人换了一批又一批，经历的事一件又一件，初识世间冷暖，人间百态。20年，嘴角的笑起起落落，眉间的愁浓浓淡淡，浅尝聚散离合，悲欢苦乐。20年，太长太短太快太慢。​        小学六年,人生的一块糖，让我感到甜密，采桑养蚕掏鸟窝，撒网捕鱼钓龙虾。春天的烟花爆竹，夏天的石榴西瓜，秋天的金桔柚子，冬天的木炭红薯。属于物质贫乏年代的记忆却是香甜的。吃完糖已是初中。初中三年，人生的一束光，让我感到眩晕。懵懂叛逆，上网成瘾，整天流连于网吧游戏厅，做错了很多事情。情窦初开，却尝到了盛夏的果实的苦涩。狂妄不羁却挨了现实巴掌。穿过这束光来到高中。高中三年，人生的一道坎，让我感到痛苦。玩了一年睡了一年奋斗了一年，在抑郁低迷中不断放纵自我，磨光了我所有的锐气与勇气，留下了太多的遗憾和痛苦。跨过这道坎已是大学。大学四年，人生的一扇窗，让我感到压力，透过这扇窗看到了一个更大的世界，学了自己喜欢的专业，读了自己想读的书，去了自己想去的地方，交了自己想交的朋友，却没能遇见自己想遇见的人。打开这扇窗,希望靠自己的努力去到自己想去的地方。​         轻描淡写的几句话，不知蕴涵了多少辛酸过往。睡过的车站与马路，搬过的水泥和砖头，遭受的白眼与歧视，网吧的烟头和槟榔，高考前倒地的血泊与挣扎，还有那砸的玻璃打的架。以及许许多多怎么说也说不清的感慨。轻描淡写的一段文，不知浓缩了多少快乐瞬间。童年时的江南水乡，玄武湖旁边的立志读书，高中时的毕业的旅行，升学宴上一个月的醉酒，西湖靠椅的酣睡，八达岭的我是好汉，以及太多太多怎么数也数不完的快乐。轻描淡写的一剪时光，不知承载了多少支持感动。彭思老师的短信，万紫薇写的长信，父亲的声声鼓励，母亲悉心的照顾，朋友间的真挚情谊，以及太多太多道也道不完的感动。​        何其幸运，在我20岁时，是那么的自由与健康，父母兄弟无故，爷爷奶奶外公外婆身体硬朗。何其幸运，在我20岁时，学会了不再去取悦他人，懂得了责任与担当。何其幸运，在我20岁的时候，明白了知足常乐，常怀感恩，保持快乐。何其幸运，在我20岁时，能信心满满的去面对生活中的各种挑战，对未来充满着希望。​        1959年，BBC采访罗素时问的最后一个问题：假如这段影片在一千年后被那时的人们所发现，您想对他们说些什么？罗素答到：Love is wise，hatred is foolish. 常怀感恩之心，才是幸福之源泉，也正是因为如此，世界上总有些人的脸上笑容是那么的灿烂，感谢过去20年来所有的关心支持鼓励过我的人，也感谢过去20年来所有的伤害轻视看不起我的人，正是有了这些爱与恨的交织，才铸就了我今天的血液，铠甲，筋骨与肌肉，以及那种发自内心的淡然与洒脱。当然我最想感谢人的还是自己，感谢自己一直以来的坚持与努力。一路走来磕磕碰碰，真的很不容易，虽然也曾放弃堕落，但我依旧感恩过去的自己吃的苦受的罪，正是过去自己的负重前行，才有了今天我的轻描淡写。​        天下大势浩浩汤汤，顺之者昌逆之者亡，我们终将无可避免的要去面对这个时代的考验，分享这个时代的精彩，并被打上这个时代的烙印。中国人说：二十弱冠，三十而立，在这个男人一生中最无力却又最充满可能的年龄,我已能感受到青春的那种冲动正在慢慢的从我身上褪去，成熟与责任开始变成这个20岁大男孩生命的旋律。幸福从来都是奋斗出来的，愿未来10年，行我当行，爱我所爱，遵从内心，三十而立。​         王小波在《黄金年代》里写到：那一天我二十一岁，在我一生的黄金时代。我有好多奢望。我想爱，想吃，还想在一瞬间变成天上半明半暗的云。后来我才知道，生活就是个缓慢受锤的过程，人一天天老下去，奢望也一天天消失，最后变得像挨了锤的牛一样。可是我过二十一岁生日时没有预见到这一点。今天我20岁，我也觉得自己会永远的生猛下去，什么也锤不了我。或许我的生活也是一个缓慢的受锤的过程。但我也会依旧清晰的记得逸夫楼走廊尽头的那首小诗：休提昔日勇，莫怕少年穷。青春尤尚在，怎负少年狂。男儿当志远，柔情似水长。历尽世间劫，了却心中愿。最后祝所有关注我公众号的亲朋师友幸福喜乐，并祝元宵节愉快。]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> 时间的朋友 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[墨墨背单词破解（带发音可登陆）]]></title>
      <url>/2019/12/10/%E5%A2%A8%E5%A2%A8%E8%83%8C%E5%8D%95%E8%AF%8D%E7%A0%B4%E8%A7%A3%E7%89%88%E5%B8%A6%E5%8F%91%E9%9F%B3%E5%8F%AF%E7%99%BB%E9%99%86/</url>
      <content type="text"><![CDATA[1. 可登陆安装方式所需下载文件：链接: https://pan.baidu.com/s/1SVjJffO9QSB0LjHUSXaAdg 提取码: hk4t安装步骤：第一步，先安装小黑提供的85M的那个墨墨1，然后安装太极。第二步，打开太极，把85M的那个墨墨1添加进太极，然后返回桌面卸载掉桌面的墨墨1。第三步，在浏览器里点击安装90M的墨墨2，注意不要通过太极安装，也不要更新，安装好以后就可以正常使用了，从桌面打开墨墨，或者从太极里打开都可以用。2. 无需登录安装方式当然还有更简单的一种破解方法但不好的地方在于不能登陆无法使用美音， 如有需要直接下载安装以下文件：链接: https://pan.baidu.com/s/1JZRg7ea35A1cDWUsjvcgFA 提取码: dhcs]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> 破解 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[许下我第一千零一个愿望【转载】]]></title>
      <url>/%E8%BD%AC%E8%BD%BD/2019/11/27/%E8%AE%B8%E4%B8%8B%E6%88%91%E7%AC%AC%E4%B8%80%E5%8D%83%E9%9B%B6%E4%B8%80%E4%B8%AA%E6%84%BF%E6%9C%9B/</url>
      <content type="text"><![CDATA[本文是我博客转载的以第一篇文章，作者为黄博文。其实这篇文章我很早就看过了，今天特意转载，不单是因为他给了我很多的力量，更是因为今天自己也许下了属于我的第一个愿望，希望自己也能为了梦想而坚持。以下为原文：许下我第一千零一个愿望一.按照七年前定下的目标，我于2018年12月重新提交了自己的博士入学申请。这也是我在中科院计算所坚守五年半之后，递出的唯一一份申请。申请的目标学校位于一万四千公里之外的美国东海岸，一座布满榆树绿荫的海滨小镇。2019年2月，自己的27岁生日前夕，我收到一封挂着那所学校后缀的email，告知最终审核决定。大结局终于到来。（图1：申请结束后看到的该校校园照片）二.七年弹指一挥间。2012年3月，几位约定共同努力申请出国的学长与我在舟山东路咖啡屋的谈话，最终促使我转向出国深造之路。已经不记得前前后后有多少亲戚朋友不看好自己的申请，不记得和父母有过多少次争吵。所有人都认为，考虑到我的本科绩点只有78/100，又出身一个三本学校，博士申请几无胜算。(图2：当时保留的照片，那个晚上正在讨论出国计划的吴艇和陈兴学长)在我承诺依靠自己争取全额奖学金之后，父母给了我六千人民币，GRE考试费 + 托福考试费 + 申请费都包括在内。一同申请的朋友告诉我这是他们见过最少的申请预算。2014年本科毕业后的头半年时间里，我一边维持自己在中科院计算所的工作，一边依靠自己的英语基础裸考托福和GRE，并在包老师的推荐下得到了全美排名#53的加州大学圣克鲁斯分校的全奖录取，但被排名#18的加州大学圣芭芭拉分校拒绝。基础孱弱的城院，历史上成功获得博士全奖录取的案例几乎仅限于往届学生之间的口耳相传，这个结果让原本不抱希望的家人喜出望外，但我却有了不一样的考虑。录取我的加州大学圣克鲁斯分校教授告诉我，录取委员会讨论名单时，不止一位老师提及我的名字，最后该校计算机系将奖励杰出申请者的Regent奖学金给了我；拒绝我的加州大学圣芭芭拉分校教授，曾经在城院寻找联系人对我进行了背景调查。因此，我虽然被更加靠前的学校拒绝，但也并非全无希望。我看到了自己进一步向上突破的可能性于是在正式录取通知书送达前，我就通知圣克鲁斯分校取消自己的申请，自己则选择继续留在中科院工作。圣克鲁斯分校的研究小组随后选择了一位浙大的本科生接替了我的位置。三.对于这个决定，除了包老师和当时的女友保持中立、让我自由选择以外，理解我的目标和追求并坚信它能够实现的人，只有我自己。这个放弃录取的决定，引发了家人新一轮更强烈的反对和斥责，以及周围朋友们的不解。连父母同事也打电话怒斥我“眼高手低”，劝我“落袋为安“。但我把每个人的反对都再次顶了回去。在正式录取通知书送达后，我再次通知该校教授自己放弃录取。当天自己强忍着眼泪走出实验室，坐在空无一人的台阶上，独自哭了半个小时。擦干眼泪之后，我在手机上刷到一首老歌，是一个已经解散的台湾女子组合4-in-love唱的《一千零一个愿望》。里面有两句歌词，“不怕有多少时间多少代价，青春是我的筹码”。这句话和这首歌我一直铭刻在心，并在城院校友会老师的邀请下把它写进了《星光》校友录的自述里。（图3：2017年4月返校，吴健院长亲自颁发了图中这尊奖杯）2015年的生日当天，我给刚满23岁的自己许下了这个愿望：进一步放弃包老师让我在中科院读研的提议，转而接受不到7w的年薪，用临时派遣制的身份留在包老师的研究小组做工程师，以避免在研究生院的课程和学位要求上浪费时间，另一面则集中投入四年的时间，保持实验室科研工作第一线，随后再申请去世界顶尖大学攻读博士学位，见识一个比中科院更大的世界。这是一场彻头彻尾的豪赌，本质上是舍弃中科院的研究生学位这条安全绳，选择稳定性没有保障的派遣制身份，再额外付出四年青春作为代价，押注自己的上升动力会继续加强，鞭策自己在不留后路的情况下挑战极限，飞越重洋。这次豪赌的结局，是自己这些年里的最大心结。低薪无编制的工作，所有人的反对或不看好，三本出身和绝对劣势的成绩单，父母的经济状况无法支持我赴美求学期间的开销，所有这些负面因素驱动的强烈危机感，四年中从未散去，一直保持到2018年申请前夕。在申请前的最后一个春节，我并未回家过年而是独自留守北京，保持每天早上九点到第二天半夜三点的工作节奏，前后连续加班一百多天，最后把自己逼到精神崩溃边缘。很多朋友看到了我那天晚上发在微信里的那张照片，一地哭湿的纸巾。四.随后四年里的每一天，我都没有忘记过这个目标。我也不止一次地幻想过自己的最终归宿会在哪里。2014年的申请之后，我在自己的笔记本里总结了经验教训，其中一条是“只投两所学校是大败笔，一定要海投15所左右学校确保成功率”。而2018年的申请，我再次打破了自己定下的规则，仅仅只申请了一所学校。由于工资微薄，在中科院计算所工作的前三年里，我租住在房租低廉但没有卫浴的中科院第一招待所北楼，工资略微增加的后三年则搬到北五环外，距离中科院九公里远的一处小区，每天骑车一小时上班，骑车一小时下班，无数次地听着岳云鹏的《五环之歌》，伴随着13号线地铁在城区和城郊来来回回。13号线地铁紧邻清朝遗留下来的京张铁路线而建。距今一百一十年前，从这所学校毕业归来的詹天佑顶着英俄两国人的讥讽，在京张铁路青龙桥段设计了“人”字形往返轨道，名垂青史。詹天佑逝世二十年后，庚子赔款基金选派了一位名叫郭永怀的留学生出国深造，新中国建立后，已是世界级科学家的郭永怀毅然回国，担任中科院力学所副所长，参与两弹一星的研制。郭永怀几年后突遇空难，怀抱有关热核导弹的绝密文件长眠于首都机场外的玉米地里。他的遗孀李佩老师此后一直留在中科院研究生院任教，直到1999年离开讲台。近四十年前的改革开放初期，有一位挖煤工人出身的学生考入中科院计算所读研，李佩老师曾辅导他向这所学校递出了自己的博士申请，彼时的中国积贫积弱，这名学生囊中羞涩无力支付申请费，但这所学校仍然给他递来了录取通知书和全额奖学金。这名学生飞抵美国后，兜里揣着的仅有李佩老师借给他的生活费。这位学生在博士毕业后也留在学术界任教，并于十年前晋升为美国工程院院士，就是此后长期雄居计算机科学领域北美华人三院士之一的李凯老师。（图4：中国科学院计算技术研究所）十年前，中科院计算所的一位博士生发表了中国大陆第一篇SIGMETRICS论文，李凯老师看中他的研究能力，将他招入门下做博士后。这位博士后在2012年10月返回中科院计算所继续执教，在回国前夕，他在网上看到当时才大二的我写的ISCA论文阅读笔记，不计出身不计成绩地将我招入他的研究小组，就是现在的先进计算机系统研究中心主任包云岗老师。这所学校的计算机系排名全美第19，计算机体系结构方向排名第15，综合排名常年高居全美第3，被我周围的所有人视为世界顶尖精英教育的代名词之一，相关院系每年只从中国大陆招收最为拔尖的学生，申请竞争激烈程度更甚四年前拒绝我的加州大学圣巴巴拉分校。这是七年前的自己无法想象的高度，也是四年前的自己可望而不可及的水准线。我把自己的唯一一份申请递给了这所学校。五.顶尖名校的博士申请竞争之激烈，犹如一局上千人参与的斗地主。清北出身、出众的研究经历和论文、漂亮的成绩单，是牌堆里人人争抢的“A”和“2”。三本学校出身，堪堪越过最低申请要求的分数，是人人唯恐避之不及的“3”。而我带着两张“3”加入了这场牌局。已然无限接近于输的局面，还怎么赢？“不怕有多少时间多少代价，青春是我的筹码”。破釜沉舟的四年时间过后，我已经攒起一手王炸的牌。这四年时间里，我参与的第一个项目是PARD的原型系统搭建，负责PARD的高速缓存子系统，这个项目于2018年被英国ARM研究峰会邀请，包云岗老师去做了中国大陆有史以来第一个主旨报告；第二个项目，我在被掩埋的过往邮件中找到机会，将QoS Architecture的状态追踪开销降低了90%以上，同时维持了95%的状态追踪准确率，这一成果被华为某型尖端芯片采用。第三个项目，我带领组里的博士生和硕士生接下和华为手机高能效架构设计团队的合作，最终用模拟数据说服海思麒麟加强访存子系统的部件设计，成功推动即将于今年秋季上市的华为下一代智能手机的能耗效率进步。（图5：2018年7月，耶鲁面试前夕，我在复旦大学做学术报告）截止申请时，除了常年活跃于国际顶级学术会议圈的包云岗老师以外，我已经手握两封华为相关项目负责人的推荐信，一篇通常只有高年级博士生才有的ISCA一作投稿。申请前一年我在海南三亚Chinasys上做了现场报告，不少老师和学生认为是当届会议最出彩的报告之一，我也因此获得清华计算机系副主任陈文光教授，国内操作系统领军人物上海交大陈海波教授等国内学术圈前沿人物的赏识，陈文光教授向这所学校的录取委员会主席直接写信推荐 ……面试时，ppt第一页上需要介绍自己的教育背景，我只写了三行字。I came from a third-class college (我来自一个底层大学)No faculty member was specialized in related field （学校里没有相关领域的老师）My GPA was just above 3.0，ranked 38/51 (我的绩点勉强超过3.0，排名38/51）当知道你紧接着要打出王炸的时候，没有人会再关心王炸之前扔出来的牌有多渺小。六.拨开回忆的所有酸甜苦辣，没有什么事情，比现在亲手打开申请结果，更有仪式感了。“ Congratulations! We are delighted to inform you that you have been selected for admission as a full-time doctoral student in Computer Science starting in the 2019 fall term. ”坐落于美国东海岸纽黑文小镇的顶尖常春藤盟校，耶鲁大学，在我的27岁生日前夕，送来了人生中最珍贵的一份礼物：为自己多年坚持给予的最终回报—— 博士录取通知书，还有让我在接下来五年时间里免除后顾之忧的经济支持—— 学费全免，加上每月$2900+的奖学金。我打开地图和街景照片，看到耶鲁所在地，康涅狄格州纽黑文市的英文原名New Heaven（“新天堂”），和耶鲁校园里一座座霍格沃茨城堡一般的建筑，那一刻，多年来的心结，悄然无声地化弥于无形。这是一个让九年前刚刚迈入城院的自己，让七年前放弃学校课程追求真正内心所想的自己，让五年前破釜沉舟决心挑战更高水平线的自己，都定格在过往里，消逝在笑容里，最终实现梦想飞跃重洋的大结局。申请时我仍然只有城院的本科学位，所以这也是城院历史上第一个来自顶级常春藤盟校的博士全奖录取。也同样因为这个录取，城院的历史已经真正意义上离我远去，我将开始在一万四千公里之外的大洋彼岸追求自己的第二个学位。出身三本，学校历史上没有顶尖藤校博士的先例，曾经众多的不看好，包括家人在内的反对，无数的阻力都变成了最好的注脚 —— 时间是这个世界上最具分量的成功筹码。七.在离开之前，我推荐了来自城院电信1601班的杨阳奔赴中科院实习。最近五年里陆续有一些表现突出的学生通过城院老师推荐或者自荐方式找到我，希望通过我进入中科院计算所，而杨阳是唯一一个早在大一大二阶段就展现出超凡潜力的学生。在他赴京之前，我用了半年时间带着他一起研究处理器微结构的高性能实现，他证明了自己能够在计算机系统结构领域里，与国科大的顶尖本科生竞争。杨阳会加入中科院计算所，接手我未能完成的工作，参与实现RISCV处理器的高性能微结构。这个极具野心的研究项目旨在探索中国的新一代芯片设计生态，去年中国大陆龙芯杯近半的特等奖和一等奖选手都被招入我们组，加上先前加盟的几位南大计算机系拔尖班里挑选的最顶尖学生，我们研究小组的阵容史无前例地强大，期待杨阳能遇强更强，把城院人在中科院的故事续写下去。八.“遥望状元洲畔水，风光此日未全消”。这是清朝文人袁寿龄为我江西宜春老家的唐朝状元卢肇写的诗句。2019年春节，我返回老家，再次踏上状元洲和化成寺，许下了两个新的人生愿望。按照目前的人才政策和市场情况，耶鲁博士可以直接确保7位数的税前年薪，国内至少一百六十万人民币的购房补贴，抑或在全世界范围内挑选工作和定居地点的权利。在这样的新起点上，我也开始了自己下一步的考虑。只有更加遥不可及的目标，才能在未来十年里驱动自己继续前进，在十年之后，成为一个让今天拿到耶鲁录取的自己也难以企及的人。现在可以讲的是，耶鲁不仅送来了正式录取通知书和奖学金，还有我的博士生导师Abhishek Bhattacharjee教授对我未来的许诺。我将加入耶鲁计算机系，和普林斯顿，MIT等大学的顶尖学者们一同推进下一代人脑-计算机接口（Human-Computer Interface）研究计划，自由挑选自己感兴趣的研究方向，以及在导师的推荐下奔赴西海岸的硅谷，前往业界薪资待遇顶尖的Facebook人工智能实验室，参与研发下一代人工智能专用加速芯片。Abhishek Bhattacharjee教授执教8年时间3次获得顶级学术会议最佳论文提名，4次入选MICRO Toppicks，是我所知道的圈内最杰出的青年教授之一。在他的指导和帮助下，接下来五年时间里我还要继续保持自己的进步步伐。这是我留在QQ空间里的最后一篇日志。至于纽黑文和耶鲁，加州和硅谷，发生在大洋彼岸的故事，就留给我未来的妻子和孩子。终.结尾这首歌词，出自当年4-in-love的那首《一千零一个愿望》。送给这些年里一直关注我成长的朋友和同学们，祝福你们也能在不远的将来如愿以偿。许下我第一千零一个愿望有一天幸福总会听我的话不怕有多少时间多少代价青春是我的筹码我只有这一千零一个愿望有一天幸福总会在我手上每一颗心都有一双翅膀要勇往直前地飞翔没有到不了的地方]]></content>
      <categories>
        
          <category> 转载 </category>
        
      </categories>
      <tags>
        
          <tag> 转载 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[街拍精选（二）]]></title>
      <url>/%E6%91%84%E5%BD%B1/2019/11/27/Myphotograph3/</url>
      <content type="text"><![CDATA[]]></content>
      <categories>
        
          <category> 摄影 </category>
        
      </categories>
      <tags>
        
          <tag> 摄影 </tag>
        
          <tag> 街拍 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[人像精选（一）]]></title>
      <url>/%E6%91%84%E5%BD%B1/2019/11/27/Myphotograph2/</url>
      <content type="text"><![CDATA[]]></content>
      <categories>
        
          <category> 摄影 </category>
        
      </categories>
      <tags>
        
          <tag> 摄影 </tag>
        
          <tag> 街拍 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[街拍精选（一)]]></title>
      <url>/%E6%91%84%E5%BD%B1/2019/11/27/Myphotograph1/</url>
      <content type="text"><![CDATA[]]></content>
      <categories>
        
          <category> 摄影 </category>
        
      </categories>
      <tags>
        
          <tag> 摄影 </tag>
        
          <tag> 街拍 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[对Quick Sort的进一步理解]]></title>
      <url>/%E7%AE%97%E6%B3%95/2019/11/05/QuickSort/</url>
      <content type="text"><![CDATA[最近闲来无事，重新学习了一下算法，选用的教材则是大名鼎鼎的《算法导论》。不得不说算法导论真的是一本神书，只是当年自己过于年轻而不得其精髓。在看算法导论之前，自己对快排的理解只停留在实现和使用上，但是对里面的思想却一无所知。总的来说快排是分治思想的一种体现，而书中对快排优化时采用的随机算法和概率分析，让我不禁感慨理论才是指导实践的第一标准。1. 经典的快排算法快速排序的基本思想是：先选一个“主元”，用它对整个待排序列进行筛选，以保证：其左边的元素都不大于它，其右边的元素都不小于它。这样，排序问题就被分割为两个子区间。再分别对子区间排序就可以了。简单的递归实现：void QuickSort(int* array,int left,int right){    //表示已经完成一个组	if(left &gt;= right){ 		return;	}    //获取枢轴的位置，并保证主元左边的元素都不大于它，其右边的元素都不小于它	int index = PartSort(array,left,right);	QuickSort(array,left,index - 1);	QuickSort(array,index + 1,right);}其中代码的核心部分便是 PartSort()函数，而PartSort()函数又有三种实现方式，包括 左右指针法，挖坑法和前后指针法。下面分别介绍这三种算法的实现方式和原理：1. 左右指针法原理：      选取一个关键字(key)作为枢轴，一般取整组记录的第一个数/最后一个，这里采用选取序列最后一个数为枢轴。    设置两个变量left = 0;right = N - 1;从left一直向后走，直到找到一个大于key的值，right从后至前，直至找到一个小于key的值，然后交换这两个数。    重复第三步，一直往后找，直到left和right相遇，这时将key放置left的位置即可。  代码：int PartSort(int* array,int left,int right){	int&amp; key = array[right];	while(left &lt; right){		while(left &lt; right &amp;&amp; array[left] &lt;= key){			++left;		}		while(left &lt; right &amp;&amp; array[right] &gt;= key){			--right;		}		swap(array[left],array[right]);	}	swap(array[left],key);	return left;}2. 挖坑法原理：      选取一个关键字(key)作为枢轴，一般取整组记录的第一个数/最后一个，这里采用选取序列最后一个数为枢轴，也是初始的坑位。    设置两个变量left = 0;right = N - 1;    从left一直向后走，直到找到一个大于key的值，然后将该数放入坑中，坑位变成了array[left]。    right一直向前走，直到找到一个小于key的值，然后将该数放入坑中，坑位变成array[right]。    重复3和4的步骤，直到left和right相遇，然后将key放入最后一个坑位。  代码：int PartSort(int* array,int left,int right){	int key = array[right];	while(left &lt; right){		while(left &lt; right &amp;&amp; array[left] &lt;= key){			++left;		}		array[right] = array[left];		while(left &lt; right &amp;&amp; array[right] &gt;= key){			--right;		}		array[left] = array[right];	 	}	array[right] = key;	return right;}3. 前后指针法原理:      定义变量cur指向序列的开头，定义变量pre指向cur的前一个位置。    当array[cur] &lt; key时，cur和pre同时往后走，如果array[cur]&gt;key，cur往后走，pre留在大于key的数值前一个位置。    当array[cur]再次 &lt; key时，交换array[cur]和array[pre]。  代码int PartSort(int* array,int left,int right){	if(left &lt; right){		int key = array[right];		int cur = left;		int pre = cur - 1;		while(cur &lt; right){            //如果找到小于key的值，并且cur和pre之间有距离时则进行交换。			while(array[cur] &lt; key &amp;&amp; ++pre != cur)	{				swap(array[cur],array[pre]);			}			++cur;		}		swap(array[++pre],array[right]);		return pre;	}	return -1;}2. 快排的时间复杂度分析快速排序的时间复杂度和每次划分的比例相关其公式如下所示:T（n）= T（n/a） + T(n/b) + nT（1）= 0  1 . 最优情况在最优情况下Partition每次都划分的很均匀，即每次都对半分。则   T(n) = 2 T(n/2) + n解得 Ｔ(n) = O(nlogn)2. 最坏情况：而最坏情况Partition每次都划分的极不均匀，即每次都分成1个和n-1个。则  T(n) =  T(n-1) + T(1) + n解得 Ｔ(n) = O(n^2)由于markdown打公式非常累具体过程可以参照：https://www.cnblogs.com/LzyRapx/p/9565827.html3. 随机快排从上面的分析可知，当快排遇到已排好的数据时时间复杂度会降到 O(n^2) 的复杂度，那么怎么避免出现这种情况呢，使得无论输入数据是什么都有一个较为稳定的性能。其实实现的方法非常简单因为传统的快排在选取主元的时候，每次都选取最右/左边的元素。当序列为有序时，会发现划分出来的两个子序列一个里面没有元素，而另一个则只比原来少一个元素。为了避免这种情况，我们可以引入一个随机化量来破坏这种有序状态。即随机取一个主元而不是取最右/左边的元素。代码：int PartSort(int* array,int left,int right){	random = randomValue(left, right);    int key = array[random];	while(left &lt; right){		while(left &lt; right &amp;&amp; array[left] &lt;= key){			++left;		}		array[right] = array[left];		while(left &lt; right &amp;&amp; array[right] &gt;= key){			--right;		}		array[left] = array[right];	 	}	array[right] = key;	return right;}由于使用了随机选取主元的方式，所以随机快排的时间复杂度和输入数据的顺序便不相关了，使得他趋避免了最坏的情况而更加近于平均时间复杂度O(nlogn)使得快排的性能得到了保障，避免了出现性能极差的情况。]]></content>
      <categories>
        
          <category> 算法 </category>
        
      </categories>
      <tags>
        
          <tag> 读书笔记 </tag>
        
          <tag> 《算法导论》 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[我的保研之旅]]></title>
      <url>/%E9%9A%8F%E7%AC%94/2019/10/26/%E6%88%91%E7%9A%84%E4%BF%9D%E7%A0%94%E4%B9%8B%E6%97%85/</url>
      <content type="text"><![CDATA[去年这个时候在网上看到过很多人的保研之旅博客，那个时候觉得非常羡慕。但当自己保完研以后觉得保研其实也没什么，无非是走了一条暂时与大多数人不太一样的路罢了，以后能走多远还是看自身的造化。因此之前完全没有写这篇Blog的打算，但这几天想给自己的Blog吸引一些流量。没办为了恰饭，只能搞一些惊悚如：《我是如何以3.19的绩点和478的四级拿到南开，哈深，华科，电科，中山，浙大等学校的计算机类的offer的》的标题，标题党的标题果然是又臭有又长。]]></content>
      <categories>
        
          <category> 随笔 </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[一点关于Linux文件系统的思考]]></title>
      <url>/linux/2019/10/19/Linux-File-System/</url>
      <content type="text"><![CDATA[在上一篇Blog中我简单的探究了一下Linux中Swap的一些配置对Linux系统性能的影响，这几天有刚好碰到了一些磁盘分区挂载的问题，由于自己的基础不牢在解决这些问题的时候白白浪费了很多时间，所以说基础才是第一生产力啊。话不多说，切入今天的主题 Linux 的磁盘分区与挂载。1. 硬盘分区在了解Linux下的磁盘分区之前，首先我们得了解一下硬盘的分区，因为硬盘的分区是和操作系统没有任何关系的，它是在安装操作系统之前进行了。无论什么操作系统在启动时首先会通过MBR（Master Boot Record是位于磁盘最前边的一段引导Loader代码。）来获得操作系统文件所在的分区，所以一个可引导分区是不能缺少的。这也是为什么新买的硬盘不能直接用的原因。说到这你可能会问磁盘为什么要划分多个分区？我所知道的原因有两个：  一是为了提高管理效率，所有东西如果都放在一个分区，OS管理其起来效率比较低，因为每次要检索的东西太多。  二是提升数据安全性，因为每个分区的数据是分开的，所有系统崩溃以后重装系统并不会影响到数据安全（被覆盖），这样数据恢复起来就比较容易了。在Windows中可能比较直接，而在Linux中需要自己去挂载和管理。下面我们简单看下硬盘的分区结构:硬盘主引导扇区 = 硬盘主引导记录（MBR）+ 硬盘分区表（DPT），一共是512个字节，其中MBR是446，分区表一共64字节，然后是2个字节的结束标志。引导扇区存储在硬盘的0头0道1扇区，也就是Boot Sector。操作系统在启动时通过BIOS程序把Boot Sector读入内存，然后执行其中MBR，这个时候BIOS就把启动交给MBR控制；MBR作用是在4个分区表中搜索标志为活动的分区，找到后把活动分区的第一个扇区读入内存，然后开始执行它，运行特定系统的启动程序(LILO,GRUB,NT Loader);这个时候启动的启动就交给了操作系统的引导程序来控制了。然后操作系统进行一系列的初始化，最后把系统交给系统内核进行管理。2. Linux System分区上面介绍了硬盘分区结构，下面就简单介绍一下各个分区。硬盘分区一共有3种，主分区，扩展分区和逻辑分区。  主分区上可以安装操作系统，因为MBR中记录的主分区信息，系统启动时会到主分区来查找操作系统引导文件，所以操作系统的引导文件必须在主分区中，否则系统就无法启动了。而最多只支持4个主分区（由于硬盘仅仅为分区表保留了64个字节的存储空间，而每个分区的参数占据16个字节，故主引导扇区中总计可以存储4个分区的数据。操作系统只允许存储4个分区的数据。）。  扩展分区并不是一个真实存在的分区，它只是内存管理链表中的一个指针，指示出那一块区域是扩展分区。上面也提到出现扩展分区的原因。所以一个扩展分区也是一个主分区。  而通过在扩展分区中在划分逻辑分区对系统分区进行扩展的分区便是逻辑分区。实际上所有的逻辑分区都是在一个分区类，只是逻辑上分开，这也是叫逻辑分区的原因。但对用户来说一切都是透明了，我们看起来系统中有很多分区。Linux系统中的分区和Windows有很大的区别，对于使Dos或Windows系统来说，有几个分区就有几个驱动器，并且每个分区都会获得一个字母标识符（A,B,C,D），然后就可以选用这个字母来指定在这个分区上的文件和目录，它们的文件结构都是独立的。然而对 Linux用户来说无论有几个分区，都得分给目录使用，它归根结底就只有一个根目录，一个独立且唯一的文件结构。 Linux中每个分区都是用来组成整个文件系统的一部分，因为它采用了一种叫“挂载点”的处理方法，它的整个文件系统中包含了一整套的文件和目录，且将一个分区和一个目录联系起来。这时要载入的一个分区就在Linux的存储空间的某个目录下获得。在网上找到了一张很形象的图：从上图可以更好的理解, 我们安装系统的时候已经把分区1挂载到 / 目录下了。而这个时候没有挂载其他任何分区,所以/ 目录下的所有其他目录都在这个分区下,也就是说,我在任何目录下读写操作实际都是操作的这个1号分区。如果我们想使用其他分区，就必须把这个分区挂载到一个目录下，这个目录可以是已经存在的目录，比如/home,也可以是我们自己建立的目录,比如/oracle。当然有些目录比如/lib, /dev, /etc, /usr这些都不能挂载其他分区,因为他们都存放着系统需要的文件，一旦被挂载其他分区，那没OS就无法找到所需的文件，系统就会崩溃。比如我们把分区2挂载到/usr/X11目录下时,系统就无法通过X11目录找到分区1上的文件,这个时候系统图形界面就无法使用了。 虽然文件还在硬盘上。但目录 — 分区 是通过挂载吧他们联系起来。你更换了分区，也就破坏了联系，就无法在找到之前的文件了。我们在看分区5和分区6，我们把它挂载到/home/ftp 和 /oracle目录下,这个时候我们在操作这2个目录是,就是操作对用的分区。而WINDOWS就没这么复杂,她不是采用树形的结构,每个分区对应一个盘符,一旦建立映射关系就无法在修改。实际上，LINUX的每个挂载了分区的目录就相当于WINDOWS系统中的盘符，比如上面的，/home/ftp 和 /oracle目录我们就可以把她看做一个盘符和一个分区关联。更多详细的内容可以参照：https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/20.html]]></content>
      <categories>
        
          <category> Linux </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[一点关于Swap配置对性能影响的思考]]></title>
      <url>/linux/2019/10/12/%E4%B8%80%E4%BA%9B%E5%85%B3%E4%BA%8ELinux-swap%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="text"><![CDATA[之前在学Linux的时候就了解过，Swap分区是在Linux系统的物理内存不够用的时候，把硬盘空间中的一部分空间释放出来，以供当前运行的程序使用的一种机制，类似于windows的虚拟内存的作用。但是一直停留在对这个概念的了解上面，并没有接触或者感触到Swap对系统性能的影响。直到前段时间在用无服务器下载Linux内核的源码时出现了Out of memory的错误，因为之前使用阿里云相同内存的服务器并没有出现这种情况，所以在排查了一遍以后才发现自己的服务器没有设置Swap分区，导致1G的内存不够用。在将Swap调整到1G后运行正常。为什么不将内存设置的更大些呢？原因很简单因为Swap分区的内存是驻留在硬盘上的，而读写硬盘要比直接使用真实内存慢得多(要慢数千倍，即使是SSD也会慢很多后文会提到)设置过大的Swap内存可能会让系统性能变得异常糟糕。在用Swap解决了内存不足的问题后，我又发现自己的电脑在CPU利用率不高的情况下依旧很卡，之前一直以为是CPU性能跟不上，但仔细排查以后发现自己 /proc/sys/vm/swappiness中的值是默认的60(swappiness=0的时候表示最大限度使用物理内存，然后才是 swap空间，swappiness＝100的时候表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面。)，这导致在内存充足的情况下Swap分区的利用率比内存还要高。而这极大的拉低了我系统的流畅性。在将swappiness的值设置为5以后自己的电脑无论是在开机还是运行过程都比原来感觉快了许多。查看并修改swappiness的命令：sudo cat /proc/sys/vm/swappinesssudo sysctl -w vm.swappiness=5电脑重启以后设置失效，想永久修改swappiness可以在 /etc/sysctl.conf中添加vm.swappiness=5。当然Swap还有很多东西需要去学习和了解，在面对不同的应用时和不同的场景下Swap大小和swappiness的设置都有着很多学问，在此只是记录一下自己对Swap分区和系统性能之间的一点点思考。]]></content>
      <categories>
        
          <category> Linux </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/%E9%9A%8F%E7%AC%94/2019/10/11/HelloWorld/</url>
      <content type="text"><![CDATA[很久都没有写博客了，也不知道为什么今天突然心血来潮在Github上搭了一个博客。也许是自己最近这一段时间太过颓废，想尝试着改变自己。其实之前也一直都想写些什么的，但博客放在自己的服务器上总觉得不放心，便一直迟迟没有动笔。而最近刚保完研究，也算比较清闲。其实这段时间自己一直都陷入在一种迷茫而又无所事事的状态，特别是拿到浙软和哈深的offer后一直在纠结于两所学校的选择。直到现在自己也不知道，选择浙软是否是一个好的选择。或许就像《未选择的路》中的那样，自己选择了一条自己觉得更诱人更美丽的道路，多年以后在生活不顺，人生失意的时候也会问问自己当年为什么要选择这条路。     《未选择的路》    黄色的树林里分出两条路可惜我不能同时去涉足我在那路口久久伫立我向着一条路极目望去直到它消失在丛林深处但我却选择了另外一条路它荒草萋萋，十分幽寂显得更诱人，更美丽虽然在这条小路上很少留下旅人的足迹那天清晨落叶满地两条路都未经脚印污染呵，留下一条路等改日再见但我知道路径延绵无尽头恐怕我难以再回返也许多少年后在某个地方，我将轻声叹息将往事回顾：一片树林里分出两条路——而我选择了人迹更少的一条，从此决定了我一生的道路。回首正是：忽忽一场大梦，其乐也无边。幽幽一朝梦觉，其恨也幽远。]]></content>
      <categories>
        
          <category> 随笔 </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
</search>
